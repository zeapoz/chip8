pub struct Memory {
    pub ram: [u8; 4096],
}

impl Memory {
    pub fn new() -> Memory {
        let mut memory = Memory {
            ram: [0; 4096]
        };

        let mut i = 0;
        for sprite in load_sprites() {
            memory.ram[i] = sprite;
            i += 1;
        }
        memory
    }

    pub fn read_byte(&self, address: usize) -> u8 {
        self.ram[address]
    }

    pub fn write_byte(&mut self, address: usize, value: u8) {
        self.ram[address] = value;
    }
}

fn load_sprites() -> [u8; 80] {
    let sprites: [u8; 80] = [
        0xF0, 0x90, 0x90, 0x90, 0xF0,
        0x20, 0x60, 0x20, 0x20, 0x70,
        0xF0, 0x10, 0xF0, 0x80, 0xF0,
        0xF0, 0x10, 0xF0, 0x10, 0xF0,
        0x90, 0x90, 0xF0, 0x10, 0x10,
        0xF0, 0x80, 0xF0, 0x10, 0xF0,
        0xF0, 0x80, 0xF0, 0x90, 0xF0,
        0xF0, 0x10, 0x20, 0x40, 0x40,
        0xF0, 0x90, 0xF0, 0x90, 0xF0,
        0xF0, 0x90, 0xF0, 0x10, 0xF0,
        0xF0, 0x90, 0xF0, 0x90, 0x90,
        0xE0, 0x90, 0xE0, 0x90, 0xE0,
        0xF0, 0x80, 0x80, 0x80, 0xF0,
        0xE0, 0x90, 0x90, 0x90, 0xE0,
        0xF0, 0x80, 0xF0, 0x80, 0xF0,
        0xF0, 0x80, 0xF0, 0x80, 0x80,
    ];
    sprites
}
